#pragma once

#define DEFAULT_MSG_TEXTSIZE 50
#define DEFAULT_MSGSIZE (57 + DEFAULT_MSG_TEXTSIZE)
// there are 21 essential bytes in a message: one MSGTYPE byte, 5x ID ints (4 bytes each)
#define DEFAULT_CHATSIZE (DEFAULT_MSGSIZE - 21)

#include "Enums.h"
#include "Coord.h"

enum MSGTYPE {
	MSGTYPE_NONE,
	MSGTYPE_MOVE,
	MSGTYPE_ACTION,
	MSGTYPE_SOUND,
	MSGTYPE_INQUIRY,
	MSGTYPE_SETCLIENTPLAYER,
	MSGTYPE_LEAVE,
	MSGTYPE_RESYNCGAME,
	MSGTYPE_SELECT,
	MSGTYPE_NEXTTURN,
	MSGTYPE_STARTGAME,
	MSGTYPE_DONELOAD,
	MSGTYPE_AISTEP,
	MSGTYPE_INFO,
	MSGTYPE_CLEAR,
	MSGTYPE_CONNECT,
	MSGTYPE_DISCONNECT,
	MSGTYPE_TEXT,
	MSGTYPE_GAMECONFIG,
	MSGTYPE_LOGIN,
	MSGTYPE_CREATEUSER,
	MSGTYPE_ERROR,
	MSGTYPE_PLACEPROG,
	MSGTYPE_CHAT,
	MSGTYPE_PROGINVENTORY,
	MSGTYPE_CREDITPICKUP,
	MSGTYPE_LEVELUNLOCK,
	MSGTYPE_PING
};

enum MSGSOUNDNAME {
	MSGSOUNDNAME_MOVE,
	MSGSOUNDNAME_DAMAGE,
	MSGSOUNDNAME_HEAL,
	MSGSOUNDNAME_ZERO,
	MSGSOUNDNAME_ONE,
	MSGSOUNDNAME_SIZEMOD,
	MSGSOUNDNAME_SPEEDMOD,
	MSGSOUNDNAME_PICKUPCREDIT
};

enum MSGINQUIRYTYPE {
	MSGINQUIRYTYPE_TILECONTENTS,
	MSGINQUIRYTYPE_SELECTEDTILE,
	MSGINQUIRYTYPE_SELECTEDPROG
};

enum MSGSELECTTYPE {
	MSGSELECTTYPE_PROGRAM,
	MSGSELECTTYPE_TILE,
	MSGSELECTTYPE_ACTION
};

enum MSGLEVELTYPE {
	MSGLEVELTYPE_LOAD,
	MSGLEVELTYPE_SAVE,
	MSGLEVELTYPE_CLEAR
};

enum MSGINFOTYPE {
	MSGINFOTYPE_TILE,
	MSGINFOTYPE_BKG,
	MSGINFOTYPE_ITEM,
	MSGINFOTYPE_ACTION,
	MSGINFOTYPE_GAMESTATUS,
	MSGINFOTYPE_USERNAME,
	MSGINFOTYPE_PASSWORD,
	MSGINFOTYPE_PROGINVENTORY,
	MSGINFOTYPE_CREDITS,
	MSGINFOTYPE_ANIM,

	// entity creation
	MSGINFOTYPE_TEAM,
	MSGINFOTYPE_PLAYER,
	MSGINFOTYPE_PROGRAM,
	MSGINFOTYPE_SPAWNGROUP,

	// entity deletion
	MSGINFOTYPE_TEAMDELETE,
	MSGINFOTYPE_PLAYERDELETE,
	MSGINFOTYPE_PROGRAMDELETE,
	MSGINFOTYPE_SPAWNGROUPDELETE,

	// player modification
	MSGINFOTYPE_PLAYERSETMIND,

	// program modification
	MSGINFOTYPE_PROGRAMADDTAIL,
	MSGINFOTYPE_PROGRAMADDHEAD,
	MSGINFOTYPE_PROGRAMREMOVETILE,
	MSGINFOTYPE_PROGRAMCHANGENUMACTIONS,
	MSGINFOTYPE_PROGRAMCHANGENUMMOVES,
	MSGINFOTYPE_PROGRAMCHANGEMAXHEALTH,
	MSGINFOTYPE_PROGRAMCHANGEMAXACTIONS,
	MSGINFOTYPE_PROGRAMCHANGEMAXMOVES,

	// spawn group modification
	MSGINFOTYPE_SPAWNGROUPADDTILE,
	MSGINFOTYPE_SPAWNGROUPREMOVETILE,
	MSGINFOTYPE_SPAWNGROUPSETPLAYER
};

enum MSGGAMECONFIGTYPE {
	// gamemodes
	MSGGAMECONFIGTYPE_FFA,
	MSGGAMECONFIGTYPE_TEAMDM,
	MSGGAMECONFIGTYPE_COOP,
	MSGGAMECONFIGTYPE_CAMPAIGN,

	// default levels
	MSGGAMECONFIGTYPE_LEVEL_HASH,
	MSGGAMECONFIGTYPE_LEVEL_CROSS,
	MSGGAMECONFIGTYPE_LEVEL_ARRAY,
	MSGGAMECONFIGTYPE_LEVEL_SHOWDOWN,

	// for numbered levels
	MSGGAMECONFIGTYPE_LEVEL_NUMBERED
};

struct Message {
	// message type
	MSGTYPE type;

	// ids
	int clientID;
	int teamID;
	int playerID;
	int programID;
	int actionID;

	// general-use position fields
	Coord pos;
	Coord pos2;

	// general-purpose ints
	int num;
	int num2;

	// select
	MSGSELECTTYPE selectType;

	// sound
	MSGSOUNDNAME soundType;

	// level load
	MSGLEVELTYPE levelType;

	// inquiry
	MSGINQUIRYTYPE inquiryType;

	// info
	MSGINFOTYPE infoType;
	GAMESTATUS statusType;
	TILE tileType;
	BACKGROUND bkgType;
	PROGRAM progType;
	ITEM itemType;
	ANIMTYPE animType;

	// game config
	MSGGAMECONFIGTYPE gameConfigType;

	// text
	char text[DEFAULT_CHATSIZE];
};

void _serializeMessage(char* buffer, Message m);

Message _deserializeMessage(char* in);

void _printMessage(Message m);